/**:
  ros__parameters:
    # cam_base_topic: camera/image_raw
    cam_base_topic: oak/rgb
    output_frame: ''

    # marker_dict: 4X4_50
    marker_dict: 4X4_4

    image_is_rectified: false
    image_sub_compressed: false
    image_sub_qos:
      reliability: 2 # 0 - system default, 1 - reliable, 2 - best effort
      durability: 2 # 0 - system default, 1 - transient local, 2 - volatile
      depth: 1

    publish_tf: true
    # marker_size: 0.0742
    marker_size: 0.0915

    # Dynamically reconfigurable Detector parameters
    # https://docs.opencv.org/4.2.0/d5/dae/tutorial_aruco_detection.html
    aruco:
      # minimum window size for adaptive thresholding before finding contours
      adaptiveThreshWinSizeMin: 3

      # maximum window size for adaptive thresholding before finding contours 
      adaptiveThreshWinSizeMax: 23

      # increments from adaptiveThreshWinSizeMin to adaptiveThreshWinSizeMax during the thresholding
      adaptiveThreshWinSizeStep: 10

      # constant for adaptive thresholding before finding contours
      adaptiveThreshConstant: 7.0

      # determine minimum perimeter for marker contour to be detected.
      # This is defined as a rate respect to the maximum dimension of the input image
      minMarkerPerimeterRate: 0.03

      # determine maximum perimeter for marker contour to be detected.
      # This is defined as a rate respect to the maximum dimension of the input image
      maxMarkerPerimeterRate: 4.0

      # minimum accuracy during the polygonal approximation process to determine which contours are squares.
      polygonalApproxAccuracyRate: 0.03

      # minimum distance between corners for detected markers relative to its perimeter
      minCornerDistanceRate: 0.05

      # minimum distance of any corner to the image border for detected markers
      minDistanceToBorder: 3

      # minimum average distance between the corners of the two markers to be grouped (default 0.125).
      # The rate is relative to the smaller perimeter of the two markers.
      # Two markers are grouped if average distance between the corners of the two markers is less than
      # min(MarkerPerimeter1, MarkerPerimeter2)*minMarkerDistanceRate.
      minMarkerDistanceRate: 0.05

      # number of bits of the marker border, i.e. marker border width
      markerBorderBits: 1

      # number of bits (per dimension) for each cell of the marker when removing the perspective
      perspectiveRemovePixelPerCell: 4

      # width of the margin of pixels on each cell not considered for the determination of the cell bit.
      # Represents the rate respect to the total size of the cell, i.e. perspectiveRemovePixelPerCell
      perspectiveRemoveIgnoredMarginPerCell: 0.13

      # maximum number of accepted erroneous bits in the border (i.e. number of allowed white bits in the border).
      # Represented as a rate respect to the total number of bits per marker
      maxErroneousBitsInBorderRate: 0.35

      # minimun standard deviation in pixels values during the decodification step to apply Otsu
      # thresholding (otherwise, all the bits are set to 0 or 1 depending on mean higher than 128 or not) 
      minOtsuStdDev: 5.0

      # error correction rate respect to the maximun error correction capability for each dictionary
      errorCorrectionRate: 0.6

      cornerRefinementMethod: 2 # 0 - None, 1 - Subpix, 2 - Contour

      # maximum window size for the corner refinement process (in pixels)
      cornerRefinementWinSize: 5

      # maximum number of iterations for stop criteria of the corner refinement process
      cornerRefinementMaxIterations: 30

      # minimum error for the stop cristeria of the corner refinement process
      cornerRefinementMinAccuracy: 0.1

      # to check if there is a white marker
      detectInvertedMarker: false

      # (required OpenCV 4.6.0+) enable the new and faster Aruco detection strategy.
      # Proposed in the paper:
      # Romero-Ramirez et al: Speeded up detection of squared fiducial markers (2018)
      # https://www.researchgate.net/publication/325787310_Speeded_Up_Detection_of_Squared_Fiducial_Markers
      useAruco3Detection: false

      # (required OpenCV 4.6.0+) minimum side length of a marker in the canonical image. Latter is the binarized image in which contours are searched
      minSideLengthCanonicalImg: 32

      # (required OpenCV 4.6.0+) range [0,1], eq (2) from paper. The parameter tau_i has a direct influence on the processing speed.
      minMarkerLengthRatioOriginalImg: 0.0
